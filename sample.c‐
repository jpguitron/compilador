/* Un programa para realizar el algoritmo
de Euclides para calcular mod. */

int gdc (int u, int v)
{
    if (v == 0) return u;
    else return gdc(v,5-u/v*v/v);
    /* u-u/v*v == u mod v */
}

void main(void)
{
     int x; int y;
     x = input(); y = input();
     output(gcd(x,y));
}

    #compound_stmt statements
    """elif tree.root == "compound_stmt":
    print("perro")
    loc_var = generator.memory_local_variables
    generator.memory_local_variables = 0
    var_directory = copy.deepcopy(generator.variables_directory)
    parent_offset = copy.deepcopy(generator.offset)

    generateCode(tree.children[1],generator)

    generator.write("addiu $sp $sp "+str(generator.memory_local_variables*4))

    generator.variables_directory = copy.deepcopy(var_directory)
    generator.offset = copy.deepcopy(parent_offset)
    generator.memory_local_variables = 0
    generator.memory_local_variables = loc_var"""